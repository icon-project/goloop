/*
 * Copyright 2022 ICON Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package v3

var missingTxHashes = []string{
	"\x3c\xf6\xc4\xde\x0e\x05\xd6\xcb\x95\x0d\x5c\x59\xd5\x1b\xad\xad\xa6\xa9\x67\x21\x94\x43\x72\xfa\x36\x8a\xe6\x6e\x91\xda\x2d\x8c",
	"\x75\x63\x78\x9c\x2f\xaf\x86\x7c\xa6\x93\x28\xde\x1f\x14\xd1\x9c\xcf\x06\x01\x79\x2b\x01\x71\xda\xc6\x45\x65\x1d\x1e\xe8\x48\x37",
	"\xf8\xd6\xed\x3c\x76\x8a\xc7\xc7\xd7\x60\x3c\xd3\xb2\x88\xe0\x9a\x8d\x65\x46\x63\x4a\x51\xf4\x81\x87\xc4\x1a\x50\x24\x13\xf0\x06",
	"\x83\xb4\x1b\xbb\x81\x3b\x89\xff\x67\x31\xbf\xfb\x24\x4a\xb0\x68\x67\x21\x4b\x13\xc9\x91\xd2\x52\x23\x7e\xb5\xaf\x2d\x90\x80\x96",
	"\xb1\xb5\x3a\x46\x3c\x41\x96\x7a\x2a\x4d\xc4\xc2\x59\xa7\x3f\x75\xa1\x51\xdf\xed\xcf\xee\x27\x1e\xf5\x70\xa4\x45\x00\x70\x59\xec",
}

var subTxHashes = []string{
	"\x3c\xf6\xc4\xde\x0e\x05\xd6\xcb\x95\x0d\x5c\x59\xd5\x1b\xad\xad\xa6\xa9\x67\x21\x94\x43\x72\xfa\x36\x8a\xe6\x6e\x91\xda\x2d\x8b",
	"\x75\x63\x78\x9c\x2f\xaf\x86\x7c\xa6\x93\x28\xde\x1f\x14\xd1\x9c\xcf\x06\x01\x79\x2b\x01\x71\xda\xc6\x45\x65\x1d\x1e\xe8\x48\x36",
	"\xf8\xd6\xed\x3c\x76\x8a\xc7\xc7\xd7\x60\x3c\xd3\xb2\x88\xe0\x9a\x8d\x65\x46\x63\x4a\x51\xf4\x81\x87\xc4\x1a\x50\x24\x13\xf0\x05",
	"\x83\xb4\x1b\xbb\x81\x3b\x89\xff\x67\x31\xbf\xfb\x24\x4a\xb0\x68\x67\x21\x4b\x13\xc9\x91\xd2\x52\x23\x7e\xb5\xaf\x2d\x90\x80\x95",
	"\xb1\xb5\x3a\x46\x3c\x41\x96\x7a\x2a\x4d\xc4\xc2\x59\xa7\x3f\x75\xa1\x51\xdf\xed\xcf\xee\x27\x1e\xf5\x70\xa4\x45\x00\x70\x59\xeb",
}

type missingTransactionLocator struct {
	height int64
	index  int
}

var missingTxLocators = map[string]missingTransactionLocator{
	subTxHashes[0]: {43244423, 1},
	subTxHashes[1]: {43271612, 2},
	subTxHashes[2]: {43271612, 3},
	subTxHashes[3]: {43292491, 1},
	subTxHashes[4]: {43292491, 2},
}

var missingTxHashToSubTxHash = map[string]string{
	missingTxHashes[0]: subTxHashes[0],
	missingTxHashes[1]: subTxHashes[1],
	missingTxHashes[2]: subTxHashes[2],
	missingTxHashes[3]: subTxHashes[3],
	missingTxHashes[4]: subTxHashes[4],
}

type missingTransactions struct{}

func (i missingTransactions) GetLocationOf(txHash []byte) (int64, int, bool) {
	if loc, ok := missingTxLocators[string(txHash)]; ok {
		return loc.height, loc.index, true
	}
	return -1, -1, false
}

func (i missingTransactions) ReplaceID(height int64, txHash []byte) []byte {
	if subTxHash, ok := missingTxHashToSubTxHash[string(txHash)]; ok {
		if loc, ok := missingTxLocators[subTxHash]; ok {
			if height == loc.height {
				return []byte(subTxHash)
			}
		}
	}
	return txHash
}

// TransactionLocator object for accessing missed transaction information
var iconMissedTransactions missingTransactions
