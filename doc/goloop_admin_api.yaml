openapi: 3.0.2
info:
  title: Node Management API
  description: goloop management
  version: 0.1.0
servers:
  - url: http://localhost:9080/admin
tags:
  - name: node
    description: Node Management
  - name: chain
    description: Chain Management
x-tagGroups:
  - name: Node Management
    tags:
      - chain
      - node
x-pathParameters:cid: &path__cid
  - name: cid
    in: path
    required: true
    description: "chain-id of chain"
    schema:
      type: string
      format: "\"0x\" + lowercase HEX string"
x-queryParameters:format: &query__format
  - name: format
    in: query
    description: "Format the output using the given Go template"
    schema:
      type: string

paths:
  /chain:
    get:
      operationId: listChain
      tags:
        - chain
      summary: List Chains
      description: Returns a list of chains
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                description: "array of chains"
                items:
                  $ref: "#/components/schemas/Chain"
        "500":
          description: Internal Server Error
    post:
      operationId: joinChain
      tags:
        - chain
      summary: Join Chain
      description: Join Chain
      requestBody:
        description: "Genesis-Storage zip file and json encoded chain-configuration for join chain using multipart"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                json:
                  allOf:
                    - $ref: "#/components/schemas/ChainConfig"
                  description: "json encoded chain-configuration, using multipart 'Content-Disposition: name=json'"
                genesisZip:
                  type: string
                  format: binary
                  description: "Genesis-Storage zip file, using multipart 'Content-Disposition: name=genesisZip'"
              required:
                - json
                - genesisZip
            encoding:
              json:
                contentType: application/json
              genesisZip:
                contentType: application/octet-stream
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ChainID"
        "409":
          description: Conflict
        "500":
          description: Internal Server Error

  /chain/{cid}:
    get:
      operationId: getChain
      tags:
        - chain
      summary: Inspect Chain
      description: Return low-level information about a chain.
      parameters:
        - <<: *path__cid
        - <<: *query__format
        - name: informal
          in: query
          description: "Inspect with informal data"
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChainInspect"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      operationId: leaveChain
      tags:
        - chain
      summary: Leave Chain
      description: Leave Chain.
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/start:
    post:
      operationId: startChain
      tags:
        - chain
      summary: Start Chain
      description: Start Chain.
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/stop:
    post:
      operationId: stopChain
      tags:
        - chain
      summary: Stop Chain
      description: Stop Chain.
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/reset:
    post:
      operationId: resetChain
      tags:
        - chain
      summary: Reset Chain
      description: Reset Chain.
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  #   /chain/{cid}/verify:
  #     post:
  #       operationId: verifyChain
  #       tags:
  #         - chain
  #       summary: Verify Chain
  #       description: Verify Chain.
  #       parameters:
  #         - <<: *path__cid
  #       responses:
  #         "200":
  #           description: Success
  #         "404":
  #           description: Not Found
  #         "500":
  #           description: Internal Server Error
  /chain/{cid}/import:
    post:
      operationId:  importChain
      tags:
        - chain
      summary: Import Chain
      description: Import a chain from legacy database.
      parameters:
        - <<: *path__cid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ChainImportParam"
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/prune:
    post:
      operationId:  pruneChain
      tags:
        - chain
      summary: Prune Chain
      description: Prune chain data from the specific height
      parameters:
        - <<: *path__cid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PruneParam'
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/backup:
    post:
      operationId:  backupChain
      tags:
        - chain
      summary: Backup Chain
      description: Backup chain data to the specific file
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/genesis:
    get:
      operationId: getChainGenesis
      tags:
        - chain
      summary: Download Genesis-Storage
      description: Download Genesis-Storage zip file
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
              description: 'zip file with "Content-Disposition: attachment; filename=" header'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /chain/{cid}/configure:
    get:
      operationId: getChainConfiguration
      tags:
        - chain
      summary: View chain configuration
      description: Return chain configuration.
      parameters:
        - <<: *path__cid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChainConfig"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      operationId: configureChain
      tags:
        - chain
      summary: Configure chain
      description: Configure chain, configurable properties refer to [ChainConfig](#schemachainconfig)
      parameters:
        - <<: *path__cid
      requestBody:
        required: true
        description: key-value to configure
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ConfigureParam"
        links:
          getChainConfiguration
      responses:
        "200":
          description: Success
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /system:
    get:
      operationId: getSystem
      tags:
        - node
      summary: View system
      description: Return system infomation.
      parameters:
        - <<: *query__format
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System"
        "500":
          description: Internal Server Error
  /system/configure:
    get:
      operationId: getSystemConfiguration
      tags:
        - node
      summary: View system configuration
      description: Return system configuration.
      responses:
        "200":
          description: Success
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/SystemConfig"
        "500":
          description: Internal Server Error
    post:
      operationId: configureSystem
      tags:
        - node
      summary: Configure system
      description: Configure system, configurable properties refer to [SystemConfig](#schemasystemconfig)
      requestBody:
        required: true
        description: key-value to configure
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ConfigureParam"
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
  /system/backup:
    get:
      operationId: getBackups
      tags:
        - node
      summary: List Backups
      description: Return list of backups
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BackupList"
        "500":
          description: Internal Server Error
  /system/restore:
    get:
      operationId: getRestoreStatus
      tags:
        - node
      summary: "Restore Status"
      description: "View the status of restoring"
      responses:
        "200":
          description: Success
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/RestoreStatus"
        "500":
          description: Internal Server Error
    post:
      operationId: startRestore
      tags:
        - node
      summary: "Start Restore"
      description: "Start to restore chain from the backup"
      requestBody:
        required: true
        description: "Name of backup and options"
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/RestoreParam"
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
    delete:
      operationId: stopRestore
      tags:
        - node
      summary: "Stop Restore"
      description: "Stop restoring operation"
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error
components:
  schemas:
    ChainID:
      type: string
      description: "chain-id of chain, \"0x\" + lowercase HEX string"
      example: "0x782b03"
    Chain:
      type: object
      properties:
        cid:
          type: string
          format: "\"0x\" + lowercase HEX string"
          description: "chain-id of chain"
        nid:
          type: string
          format: "\"0x\" + lowercase HEX string"
          description: "network-id of chain"
        channel:
          type: string
          description: "chain-alias of node"
        height:
          type: integer
          format: int64
          description: "block height of chain"
        state:
          type: string
          description: "state of chain"
        lastError:
          type: string
          description: "last error of chain"
      example:
        cid: "0x782b03"
        nid: "0x000000"
        channel: "000000"
        state: "started"
        height: 100
        lastError: ""
    ChainInspect:
      allOf:
        - $ref: "#/components/schemas/Chain"
        - type: object
          properties:
            genesisTx:
              type: object
              description: "Genesis Transaction"
            config:
              $ref: "#/components/schemas/ChainConfig"
            module:
              type: object
              additionalProperties:
                type: object
    ChainConfig:
      type: object
      properties:
        dbType:
          type: string
          enum: [badgerdb, goleveldb, boltdb, mapdb]
          default: "goleveldb"
          description: "Name of database system, ReadOnly"
        seedAddress:
          type: string
          description: "List of Seed ip-port, Comma separated string, Runtime-Configurable"
        role:
          type: integer
          enum: [0,1,2,3]
          default: 3
          description: >
            Role:
             * `0` - None
             * `1` - Seed
             * `2` - Validator
             * `3` - Seed and Validator
            Runtime-Configurable
        concurrencyLevel:
          type: integer
          default: 1
          description: "Maximum number of executors to use for concurrency"
        normalTxPool:
          type: integer
          default: 0
          description: "Size of normal transaction pool"
        patchTxPool:
          type: integer
          default: 0
          description: "Size of patch transaction pool"
        maxBlockTxBytes:
          type: integer
          default: 0
          description: "Max size of transactions in a block"
        nodeCache:
          type: string
          enum: [none,small,large]
          default: none
          description: >
            Node cache:
             * `none` - No cache
             * `small` - Memory Lv1 ~ Lv5 for all
             * `large` - Memory Lv1 ~ Lv5 for all and File Lv6 for store
        channel:
          type: string
          default: ""
          description: "Chain-alias of node"
        secureSuites:
          type: string
          default: "none,tls,ecdhe"
          description: "Supported Secure suites with order (none,tls,ecdhe) - Comma separated string"
        secureAeads:
          type: string
          default: "chacha,aes128,aes256"
          description: "Supported Secure AEAD with order (chacha,aes128,aes256) - Comma separated string"
        defaultWaitTimeout:
          type: integer
          default: 0
          description: "Default wait timeout in milli-second(0:disable)"
        maxWaitTimeout:
          type: integer
          default: 0
          description: "Max wait timeout in milli-second(0:uses same value of defaultWaitTimeout)"
        txTimeout:
          type: integer
          default: 0
          description: "Transaction timeout in milli-second(0:uses system default value)"
        autoStart:
          type: boolean
          default: false
          description: "Start the chain automatically on node start"
      example:
        dbType: "goleveldb"
        seedAddress: "localhost:8080"
        role: 3
        concurrencyLevel: 1
        normalTxPool: 5000
        patchTxPool: 1000
        maxBlockTxBytes: 1048576
        nodeCache: "none"
        channel: "000000"
        secureSuites: "none,tls,ecdhe"
        secureAeads: "chacha,aes128,aes256"
        defaultWaitTimeout: 0
        txTimeout: 0
        maxWaitTimeout: 0
        autoStart: false
    ChainImportParam:
      type: object
      properties:
        dbPath:
          type: string
          description: "Database path"
        height:
          type: int64
          description: "Block Height"
      required:
        - dbPath
        - height
      example:
        dbPath: "/path/to/database"
        height: 1
    System:
      type: object
      properties:
        buildVersion:
          type: string
          description: "build version"
        buildTags:
          type: string
          description: "buildTags"
        setting:
          type: object
          properties:
            address:
              type: string
              pattern: "\"hx\" + 40 digit HEX string"
              description: "wallet address"
            p2p:
              type: string
              description: "p2p address"
            p2pListen:
              type: string
              description: "p2p listen address"
            rpcAddr:
              type: string
              description: "Listen ip-port of JSON-RPC"
            rpcDump:
              type: boolean
              description: "JSON-RPC Request, Response Dump flag"
        config:
          $ref: "#/components/schemas/SystemConfig"
      example:
        buildVersion: "v0.1.7"
        buildTags: "linux/amd64 tags()-2019-08-20-09:39:15"
        setting:
          address: "hx4208599c8f58fed475db747504a80a311a3af63b"
          p2p: "localhost:8080"
          p2pListen: "localhost:8080"
          rpcAddr: ":9080"
          rpcDump: false
        config:
          eeInstances: 1
          rpcDefaultChannel: ""
          rpcIncludeDebug: false
    SystemConfig:
      type: object
      properties:
        eeInstances:
          type: integer
          description: "eeInstances"
        rpcDefaultChannel:
          type: string
          description: "default channel for legacy api"
        rpcIncludeDebug:
          type: boolean
          description: "JSON-RPC Response with detail information"
      example:
        eeInstances: 1
        rpcDefaultChannel: ""
        rpcIncludeDebug: false
    ConfigureParam:
      type: object
      properties:
        key:
          type: string
          description: "configuration field name"
        value:
          type: string
          description: "configuration value"
      required:
        - key
        - value

    PruneParam:
      type: object
      properties:
        dbType:
          type: string
          description: "Database type"
        height:
          type: int64
          description: "Block Height"
      required:
        - height
      example:
        dbType: "goleveldb"
        height: 1

    BackupList:
      type: array
      items:
        type: object
        propertis:
          name:
            type: string
            description: "name of the backup"
          cid:
            type: string
            format: "\"0x\" + lowercase HEX string"
            description: "chain-id of chain"
            example: "0x178977"
          nid:
            type: string
            description: "Network ID of the backup"
          height:
            type: integer
            description: "Last block height of the backup"
          size:
            type: integer
            description: "Size of the backup in bytes"
          codec:
            type: string
            description: "Size of the backup in bytes"
      example:
        - name: "0x178977_0x1_1_20200715-111057.zip"
          cid: "0x178977"
          nid: "0x1"
          channel: "1"
          height: 2021
          codec: "rlp"

    RestoreStatus:
      type: object
      properties:
        state:
          type: string
          description: "State of the job (stopped, started N/T, stopping, failed, success)"
        name:
          type: string
          description: "Name of backup"
        overwrite:
          type: boolean
          default: false
          description: "Whether it replaces existing chain data"
      required:
        - state
      example:
        name: "0x178977_0x1_1_20200715-111057.zip"
        overwrite: true
        state: "started 23/128"

    RestoreParam:
      type: object
      properties:
        name:
          type: string
          description: "Name of the backup to restore"
        overwrite:
          type: boolean
          description: "Whether it replaces existing chain"
          default: false
      required:
        - name
      example:
        name: "0x178977_0x1_1_20200715-111057.zip"
        overwrite: true
